name: Run SQL and export CSV

on:
  workflow_dispatch: {}  # ручной запуск

permissions:
  contents: write  # нужно, чтобы пушить изменения в репозиторий

jobs:
  run-query:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          # пины: sshtunnel 0.4.0 несовместим с новыми paramiko
          pip install "psycopg2-binary==2.9.9" "sshtunnel==0.4.0" "paramiko==3.3.1"

      - name: Run query (data.sql → raw_data.csv)
        env:
          # DB
          DB1_HOST: ${{ secrets.DB1_HOST }}
          DB1_NAME: ${{ secrets.DB1_NAME }}
          DB1_PASSWORD: ${{ secrets.DB1_PASSWORD }}
          DB1_PORT: ${{ secrets.DB1_PORT }}
          DB1_USER: ${{ secrets.DB1_USER }}
          DB1_SSLMODE: ${{ secrets.DB1_SSLMODE }}       # опционально, например "require"
          # Таймаут запроса (мс) — 0 = без лимита
          DB1_STATEMENT_TIMEOUT_MS: ${{ secrets.DB1_STATEMENT_TIMEOUT_MS }}
          # SSH (если нужен бастион)
          USE_SSH: ${{ secrets.USE_SSH }}               # "true"/"false"
          SSH1_HOST: ${{ secrets.SSH1_HOST }}
          SSH1_PORT: ${{ secrets.SSH1_PORT }}
          SSH1_PRIVATE_KEY: ${{ secrets.SSH1_PRIVATE_KEY }}
          SSH1_USER: ${{ secrets.SSH1_USER }}
          # Файлы
          SQL_FILE: data.sql
          OUTPUT_CSV: raw_data.csv
        run: |
          python run_query.py

      - name: Commit CSV to repo root
        # коммитим только если файл реально изменился
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # актуализируем ветку на случай, если появились новые коммиты
          git pull --rebase origin "${{ github.ref_name }}"
          git add raw_data.csv
          if git diff --staged --quiet; then
            echo "No changes in raw_data.csv — skipping commit."
          else
            git commit -m "Update raw_data.csv [skip ci]"
            git push origin HEAD:${{ github.ref_name }}
          fi

      - name: Upload CSV artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: raw_data
          path: raw_data.csv
          if-no-files-found: error
